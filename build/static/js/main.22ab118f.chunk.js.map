{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","year","getFullYear","month","toLocaleString","day","Card","classes","children","ExpenseItem","ExpensesList","items","length","map","expense","ExpensesFilter","selected","onChangeFilter","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22ab118f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // })\n\n  function titleChangeHandler(event) {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // // })\n    // setUserInput((previousState) => {\n    //   return { ...previousState, enteredTitle: event.target.value};\n    // })\n  }\n\n  function amountChangeHandler(event) {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // })\n  }\n\n  function dateChangeHandler(event) {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // })\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type=\"submit\">Add expense</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nfunction NewExpense(props) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  function saveExpenseDataHandler(enteredExpenseData) {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  function startEditingHandler() {\n    setIsEditing(true);\n  };\n\n  function stopEditingHandler() {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\n    </div>\n  );\n}\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './ExpenseDate.css'\n\nfunction ExpenseDate(props) {\n  const year = props.date.getFullYear();\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = 'card ' + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nfunction ExpensesList(props) {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ExpensesList;\n","import \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  function dropdownChangeHandler(event) {\n    props.onChangeFilter(event.target.value);\n  }\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nfunction ChartBar(props) {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n}\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nfunction Chart(props) {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nfunction ExpensesChart(props) {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0},\n    { label: 'Feb', value: 0},\n    { label: 'Mar', value: 0},\n    { label: 'Apr', value: 0},\n    { label: 'May', value: 0},\n    { label: 'Jun', value: 0},\n    { label: 'Jul', value: 0},\n    { label: 'Aug', value: 0},\n    { label: 'Sep', value: 0},\n    { label: 'Oct', value: 0},\n    { label: 'Nov', value: 0},\n    { label: 'Dec', value: 0},\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  function filterChangeHandler(selectedYear) {\n    setFilteredYear(selectedYear);\n  }\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses}/>\n        <ExpensesList items={filteredExpenses}/>\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  function addExpenseHandler(expense) {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}